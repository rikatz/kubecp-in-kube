apiVersion: apps/v1
kind: Deployment # Deveria ser um Statefulset, mas por hora vamos usar Deploy para a PoC
metadata:
  namespace: cluster-1
  name: etcd
  labels:
    cluster-name: cluster-1
    component: etcd
    tier: control-plane
    app: etcd
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: etcd
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: etcd
    spec:
      containers:
      - command:
        - etcd
        - --advertise-client-urls=http://etcd:2379
        # - --cert-file=/etc/kubernetes/pki/etcd/server.crt
        # - --client-cert-auth=true
        - --data-dir=/var/lib/etcd
        #- --initial-advertise-peer-urls=https://172.18.0.2:2380
        #- --initial-cluster=kind-control-plane=https://172.18.0.2:2380
        #- --key-file=/etc/kubernetes/pki/etcd/server.key
        - --listen-client-urls=http://0.0.0.0:2379
        - --listen-metrics-urls=http://0.0.0.0:2381
        - --listen-peer-urls=http://0.0.0.0:2380
        - --name=kind-control-plane
        #- --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt
        #- --peer-client-cert-auth=true
        #- --peer-key-file=/etc/kubernetes/pki/etcd/peer.key
        #- --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
        - --snapshot-count=10000
        #- --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
        image: k8s.gcr.io/etcd:3.4.13-0
        imagePullPolicy: IfNotPresent
        #      livenessProbe:
        #  failureThreshold: 8
        #  httpGet:
        #    host: 127.0.0.1
        #    path: /health
        #    port: 2381
        #    scheme: HTTP
        #  initialDelaySeconds: 10
        #  periodSeconds: 10
        #  successThreshold: 1
        #  timeoutSeconds: 15
        name: etcd
        resources: {}
        #startupProbe:
        #  failureThreshold: 24
        #  httpGet:
        #    host: 127.0.0.1
        #    path: /health
        #    port: 2381
        #    scheme: HTTP
        #  initialDelaySeconds: 10
        #  periodSeconds: 10
        #  successThreshold: 1
        #  timeoutSeconds: 15
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/etcd
          name: etcd-data
        - mountPath: /etc/kubernetes/pki/etcd
          name: etcd-certs
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      hostNetwork: false
      preemptionPolicy: PreemptLowerPriority
      priority: 2000001000
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoExecute
        operator: Exists
      volumes:
      - hostPath:
          path: /etc/kubernetes/pki/etcd1 # Configuravel, usar Secrets.
          type: DirectoryOrCreate
        name: etcd-certs
      - hostPath:
          path: /var/lib/etcd1 # Configuravel, deve usar NVME
          type: DirectoryOrCreate
        name: etcd-data
---
apiVersion: v1
kind: Service
metadata:
  namespace: cluster-1
  name: etcd
spec:
  clusterIP: None
  ports:
  - name: 2379-2379
    port: 2379
    protocol: TCP
    targetPort: 2379
  selector:
    app: etcd
